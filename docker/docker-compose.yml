version: '3.8'

services:
  mysql:
    image: mysql:8
    container_name: mysql
    networks:
      - spock_net
    ports:
      - "3306:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
      MYSQL_DATABASE: spockboot
    volumes:
      - ./containers_setup/mysql/init:/docker-entrypoint-initdb.d
      - ./containers_data/mysql:/var/lib/mysql

  postgres:
    image: postgres:15
    container_name: postgressql
    restart: always
    environment:
      POSTGRES_USER: usr
      POSTGRES_PASSWORD: 12345
      POSTGRES_DB: spok
    ports:
      - "5432:5432"
    volumes:
      - ./containers_data/postgres:/var/lib/postgresql/data
      - ./containers_setup/postgress/init.sql:/docker-entrypoint-initdb.d/init.sql:ro

  redis:
    image: redis:7.2-alpine
    container_name: redis
    networks:
      - spock_net
    ports:
      - "6379:6379"
    volumes:
      - ./containers_setup/redis/redis.conf:/usr/local/etc/redis/redis.conf
    command: ["redis-server", "/usr/local/etc/redis/redis.conf"]

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - spock_net
    volumes:
      - "./containers_data/zookeeper:/opt/zookeeper-3.4.13/data"

  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    networks:
      - spock_net
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,DOCKER://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,DOCKER://0.0.0.0:29092
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CREATE_TOPICS: "seat_reservation:1:1"
    volumes:
      - ./containers_data/kafka:/kafka
    depends_on:
      - zookeeper

#  http://localhost:9000/
  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    networks:
      - spock_net
    environment:
      KAFKA_BROKERCONNECT: kafka:29092
    depends_on:
      - kafka

networks:
  spock_net:
    external: true
    name: spock_net